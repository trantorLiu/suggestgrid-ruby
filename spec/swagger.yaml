swagger: '2.0'

info:
  title: SuggestGrid
  version: 0.3.0-SNAPSOT
  description: Personalization made Simple
  x-codegen-settings:
    appendContentHeaders: true
    generateAsyncCode: true
    useMethodPrefix: false
    useModelPostfix: false
    useEnumPostfix: false
    useConstructorsForConfig: false
    iOSUseAppInfoPlist: true
    androidUseAppManifest: true
    collectParameters: false
    csharpDefaultNamespace: SuggestGrid
    javaDefaultPackageName: com.suggestgrid
    brandLabel: SuggestGrid
    userAgent: SUGGESTGRID
    projectName: SuggestGrid
    enableAdditionalModelProperties: false
    preserveParameterOrder: true
    enablePHPComposerVersionString: true

schemes:
  - https

securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication.

security:
  - basicAuth: []

consumes:
  - application/json

produces:
  - application/json

tags:
  - name: type
    description: Type Methods
    x-docs-text: |
      Type methods are used for creating, getting, and deleting types.
      Refer to [types](http://www.suggestgrid.com/docs/types) for an overview.
    x-methods:
      - create_type
      - get_type
      - delete_type
      - get_all_types
      - delete_all_types
  - name: action
    description: Action Methods
    x-docs-text: |
      Action methods are for creating, getting, and deleting actions.
      Refer to [actions](http://www.suggestgrid.com/docs/actions) for an overview.
    x-methods:
      - post_action
      - post_bulk_actions
      - get_actions
      - delete_actions
  - name: metadata
    description: Metadata Methods
    x-docs-text: |
      Metadata methods are for creating, getting, and deleting user, and item metadata.
      Refer to [metadata](http://www.suggestgrid.com/docs/metadata) for an overview.
    x-methods:
      - post_user
      - post_bulk_users
      - get_user
      - get_users
      - delete_user
      - delete_all_users
      - post_item
      - post_bulk_items
      - get_item
      - get_items
      - delete_item
      - delete_all_items
  - name: recommendation
    description: Recommnedation Methods
    x-docs-text: |
      Recommnedation methods are for getting recommended items for users, or recommended users for items.
      Refer to [recommendations](http://www.suggestgrid.com/docs/recommendations) for an overview.
    x-methods:
      - get_recommended_users
      - get_recommended_items
  - name: similarity
    description: Similarity Methods
    x-docs-text: |
      Similarity methods are for getting similar items, or similar users.
      Refer to [similarities](http://www.suggestgrid.com/docs/similarities) for an overview.
    x-methods:
      - get_similar_users
      - get_similar_items

definitions:
  Action:
    type: object
    description: |
      An action object represents a user's action of a type on an item.
    properties:
      type:
        type: string
        description: The type that the action belongs to.
      user_id:
        type: string
        description: The user id of the performer of the action.
      item_id:
        type: string
        description: The item id of the item the action is performed on.
      rating:
        type: number
        description: The optional rating given by the user, if the type is explicit.
      timestamp:
        type: integer
        format: int64
        description: The optional UNIX epoch timestamp of the action. Defaults to the current timestamp.
    required:
      - type
      - user_id
      - item_id
  Filter:
    type: object
    description: |
      Contraints on the returned users or items.
      Filter structure is defined in [the filter parameter documentation](http://www.suggestgrid.com/docs/advanced-features#filters-parameter).
    additionalProperties:
      type:
        - string
        - integer
        - number
        - boolean
  Metadata:
    type: object
    description: |
      Metadata of a user or an item.
      Id parameter is required for all metadata.
      Metadata may have other parameters with string, number, or boolean values.
    properties:
      id:
        type: string
        description: |
          The id of the metadata of a user or an item.
    additionalProperties: true
    required:
      - id
  # Request Bodies
  TypeRequestBody:
    type: object
    description: Options for creating a type.
    properties:
      rating:
        type: string
        description: The rating type of the type. Could be "explicit" or "implicit", where "implicit" is the default.
  GetRecommendedUsersBody:
    type: object
    description: Query for recommended users.
    properties:
      type:
        type: string
        description: The type of the query. Recommendations will be calculated based on actions of this type.
      types:
        type: array
        description: The types of the query. Exactly one of type or types parameters must be provided.
        items:
          type: string
      item_id:
        type: string
        description: The item id of the query.
      item_ids:
        type: array
        description: The item ids of the query. Exactly one of item id or item ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most recommended items to be skipped from the response. Defaults to 0.
      size:
        type: integer
        description: The number of users requested. Defaults to 10. Must be between 1 and 10,000 inclusive.
      similar_user_id:
        type: string
        description: Similar user that the response should be similar to.
      similar_user_ids:
        type: array
        description: |
          Similar users that the response should be similar to.
          At most one of similar user and similar users parameters can be provided.
        items:
          type: string
      fields:
        type: array
        items:
          type: string
        description: The metadata fields to be included in returned user objects.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These user ids that will not be included in the response.
  GetRecommendedItemsBody:
    type: object
    description: Query for recommended items.
    properties:
      type:
        type: string
        description: The type of the query. Recommendations will be calculated based on actions of this type.
      types:
        type: array
        description: The types of the query. Exactly one of type or types parameters must be provided.
        items:
          type: string
      user_id:
        type: string
        description: The user id of the query.
      user_ids:
        type: array
        description: The user ids of the query. Exactly one of user id or user ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most recommended items to be skipped from the response. Defaults to 0.
      size:
        type: integer
        description: The number of items requested. Defaults to 10. Must be between 1 and 10,000 inclusive.
      similar_item_id:
        type: string
        description: Similar item that the response should be similar to.
      similar_item_ids:
        type: array
        description: |
          Similar items that the response should be similar to.
          At most one of similar item and similar items parameters can be provided.
        items:
          type: string
      fields:
        type: array
        items:
          type: string
        description: The metadata fields to be included in returned item objects.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These item ids that will not be included in the response.
  GetSimilarUsersBody:
    type: object
    description: Query for similar users.
    properties:
      type:
        type: string
        description: The type of the query. Similarities will be calculated based on actions of this type.
      types:
        type: array
        description: The types of the query. Exactly one of type or types parameters must be provided.
        items:
          type: string
      user_id:
        type: string
        description: The user id of the query.
      user_ids:
        type: array
        description: The user ids of the query. Exactly one of user id or user ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most similar users to be skipped from the response. Defaults to 0.
      size:
        type: integer
        description: The number of users requested. Defaults to 10. Must be between 1 and 10,000 inclusive.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields to be included in returned user objects.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These user ids that will not be included in the response.
  GetSimilarItemsBody:
    type: object
    description: Query for similar items.
    properties:
      type:
        type: string
        description: The type of the query. Similarities will be calculated based on actions of this type.
      types:
        type: array
        description: The types of the query. Exactly one of type or types parameters must be provided.
        items:
          type: string
      item_id:
        type: string
        description: The item id of the query.
          Get similar items to given item id. Either item id or item ids must be provided.
      item_ids:
        type: array
        description: The item ids of the query. Exactly one of item id or item ids parameters must be provided.
          Get similar items to given item ids. Either item id or item ids must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most similar items to be skipped from the response. Defaults to 0.
      size:
        type: integer
        description: The number of items requested. Defaults to 10. Must be between 1 and 10,000 inclusive.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields to be included in returned item objects.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These item ids that will not be included in the response.
  # Responses
  MessageResponse:
    type: object
    description: Basic response with a message for success responses.
    properties:
      message:
        type: string
        description: Message of the response.
  ActionsResponse:
    type: object
    description: Paged actions response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of actions in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of actions.
      actions:
        type: array
        items:
          $ref: '#/definitions/Action'
  ErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: The URI of the error for more details.
  DetailedErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: The URI of the error for more details.
      error_details:
        type: string
        description: Details of the response.
  LimitExceededErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: The URI of the error for more details.
      used:
        type: integer
        format: int64
        description: The quantity used by the account.
      limit:
        type: integer
        format: int64
        description: The limit quantity of the account.
  GetTypesResponse:
    type: object
    description: Type names response.
    properties:
      types:
        type: array
        description: The list of type names
        items:
          type: string
  GetTypeResponse:
    type: object
    description: Get type details response.
    properties:
      rating:
        type: string
        description: Rating type of the type that is either implicit or explicit.
  BulkPostResponse:
    type: object
    description: |
      Bulk error response.
      Returned on all bulk post requests regardless of the number of erroneous or successful posts.
    properties:
      message:
        type: string
        description: Message of the response.
      errors:
        type: array
        items:
          $ref: '#/definitions/BulkPostError'
  BulkPostError:
    type: object
    description: Error response returned due to bulk post schema validations.
    properties:
      message:
        type: string
        description: Message of the response.
      value:
        type: object
        description: The cause of the error.
      error:
        type: object
        description: Programatic description of the error.
  UsersResponse:
    type: object
    description: Get users response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of users in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of users available.
      users:
        type: array
        items:
          $ref: '#/definitions/Metadata'
  ItemsResponse:
    type: object
    description: Get items response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of items in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of items available.
      items:
        type: array
        items:
          $ref: '#/definitions/Metadata'

paths:
  # Type Paths
  /v1/types:
    get:
      tags:
        - type
      operationId: get_all_types
      summary: Gets All Types
      description: Returns all type names in an array named types.
      responses:
        200:
          description: Get types response.
          schema:
            $ref: '#/definitions/GetTypesResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - type
      operationId: delete_all_types
      summary: Deletes All Types
      description: Deletes ALL the types and ALL the actions.
      responses:
        200:
          description: Get types response.
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/types/{type}:
    get:
      tags:
        - type
      operationId: get_type
      summary: Gets Properties of a Type
      description: Returns the options of a type. The response rating parameter.
      parameters:
        - name: type
          in: path
          description: The name of the type to get properties.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Get type response.
          schema:
            $ref: '#/definitions/GetTypeResponse'
        404:
          description: Type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - type
      operationId: create_type
      summary: Creates a Type
      description: Creates a new type.
      parameters:
        - name: type
          in: path
          description: The name of the type.
          required: true
          type: string
          format: id
        - name: settings
          in: body
          description: Optional settings for the rating parameter.
          required: false
          schema:
            $ref: '#/definitions/TypeRequestBody'
      responses:
        201:
          description: Type is created.
          schema:
            $ref: '#/definitions/MessageResponse'
        402:
          description: Type limit reached.
          schema:
            $ref: '#/definitions/LimitExceededErrorResponse'
        409:
          description: Type already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Rating type is not `implicit` or `explicit`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - type
      operationId: delete_type
      summary: Deletes a Type
      description: |
        Warning: Deletes the type with all of its actions and its recommendation model.
      parameters:
        - name: type
          in: path
          description: The name of the type to be deleted.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Type is deleted
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: Action type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Action Paths
  /v1/actions:
    post:
      tags:
        - action
      operationId: post_action
      summary: Posts an Action
      description: |
        Posts an action to the given type in the body.
        The body must have user id, item id and type.
        Rating is required for actions sent to an explicit type.
      parameters:
        - name: action
          in: body
          description: The action to be posted.
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        201:
          description: An action is created.
          schema:
            $ref: '#/definitions/MessageResponse'
        400:
          description: Required user id or item id parameters are missing from the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        402:
          description: Action limit exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Action type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - action
      operationId: get_actions
      summary: Gets Actions
      description: |
        Get actions. Defaut responses will be paged by 10 actios each.
        Type, user id, item id, or older than parameters could be provided.
        The intersection of the provided parameters will be returned.
      parameters:
        - name: type
          in: query
          description: Get actions of a type.
          required: false
          type: string
          format: id
        - name: user_id
          in: query
          description: Get actions of a user id.
          required: false
          type: string
          format: id
        - name: item_id
          in: query
          description: Get actions of an item id.
          required: false
          type: string
          format: id
        - name: older_than
          in: query
          description: |
            Get actions older than the given duration, or the given time number.
            Could be a ISO 8601 duration, or a Unix time number.
            Specifications are available at https://en.wikipedia.org/wiki/ISO_8601#Durations, or https://en.wikipedia.org/wiki/Unix_time.
          required: false
          type: string
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10,000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
        - name: from
          in: query
          description: |
            The number of users to be skipped from the response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: Paged actions response.
          schema:
            $ref: '#/definitions/ActionsResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - action
      operationId: delete_actions
      summary: Delete Actions
      description: |
        Warning: Please use get actions with the exact parameters first to inspect the actions to be deleted.
        
        * Type must be provided. 
        * If user id is provided, all actions of the user will be deleted.
        * If item id is provided, all actions on the item will be deleted.
        * If older than is provided, all actions older than the timestamp or the duration will be deleted.
        * If a number of these parameters are provided, the intersection of these parameters will be deleted.
        * In addition to a type, at least one of these parameters must be provided. In order to delete all the actions of a type, delete the type.
      parameters:
        - name: type
          in: query
          description: Delete actions of a type. This parameter and at least one other parameter is required.
          required: true
          type: string
          format: id
        - name: user_id
          in: query
          description: Delete actions of a user id.
          required: false
          type: string
          format: id
        - name: item_id
          in: query
          description: Delete actions of an item id.
          required: false
          type: string
          format: id
        - name: older_than
          in: query
          description: |
            Delete actions older than the given duration, or the given time number.
            Could be a ISO 8601 duration, or a Unix time number.
            Specifications are available at https://en.wikipedia.org/wiki/ISO_8601#Durations, or https://en.wikipedia.org/wiki/Unix_time.
          required: false
          type: string
      responses:
        200:
          description: Delete actions query accepted.
          schema:
            $ref: '#/definitions/MessageResponse'
        400:
          description: Required user id or item id parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: No query parameter (user id, item id, or older than) is given. qIn order to delete all actionsdelete the type.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/actions/_bulk:
    post:
      tags:
        - action
      operationId: post_bulk_actions
      summary: Posts Actions
      description: |
        Posts bulk actions to SuggestGrid.
        The recommended method for posting multiple actions at once.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: actions
          in: body
          description: |
            A number of action objects separated with newlines.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk action request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        402:
          description: Action limit exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Action type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        413:
          description: Bulk request maximum line count exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Metadata Paths
  /v1/users/{user_id}:
    get:
      tags:
        - metadata
      operationId: get_user
      summary: Gets A User
      description: Returns a user metadata if it exists.
      parameters:
        - name: user_id
          in: path
          description: The user id to get its metadata.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Returns a user metadata.
          schema:
            $ref: '#/definitions/Metadata'
        404:
          description: User does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_user
      summary: Deletes a User
      description: Deletes a user metadata with the given user id.
      parameters:
        - name: user_id
          in: path
          description: The user id to delete its metadata.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Deleted a user metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/users:
    post:
        tags:
          - metadata
        operationId: post_user
        summary: Posts a User
        description: |
          Posts a user metadata.
          Note that this operation completely overrides previous metadata for the id, if it exists.
        parameters:
          - name: user
            in: body
            description: The metadata to be saved. Metadata format has its restrictions.
            required: true
            schema:
              $ref: '#/definitions/Metadata'
        responses:
          201:
            description: Posted a user metadata.
            schema:
              $ref: '#/definitions/MessageResponse'
          400:
            description: Metadata is invalid.
            schema:
              $ref: '#/definitions/DetailedErrorResponse'
          default:
            description: Unexpected internal error.
            schema:
              $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - metadata
      operationId: get_users
      summary: Gets Users
      description: |
        Get items and total count of items.
        Page and per-page parameters could be set.
      parameters:
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10,000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
        - name: from
          in: query
          description: |
            The number of users to be skipped from the response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: Get users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_all_users
      summary: Deletes All Users
      description: |
        Warning: Deletes all user metadata from SuggestGrid.
      responses:
        200:
          description: Deleted all user metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items/{item_id}:
    get:
      tags:
        - metadata
      operationId: get_item
      summary: Gets An Item
      description: Returns an item metadata if it exists.
      parameters:
        - name: item_id
          in: path
          description: The item id to get its metadata.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Returns an item metadata.
          schema:
            $ref: '#/definitions/Metadata'
        404:
          description: Item does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_item
      summary: Delete An Item
      description: Deletes an item metadata with the given item id.
      parameters:
        - name: item_id
          in: path
          description: The item id to delete its metadata.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Deleted an item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items:
    post:
      tags:
        - metadata
      operationId: post_item
      summary: Posts An Item
      description: |
        Posts an item metadata.
        Note that this operation completely overrides previous metadata for the id, if it exists.
      parameters:
        - name: item
          in: body
          description: The metadata to be saved. Metadata format has its restrictions.
          required: true
          schema:
            $ref: '#/definitions/Metadata'
      responses:
        201:
          description: Posted an item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        400:
          description: Metadata is invalid.
          schema:
            $ref: '#/definitions/DetailedErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - metadata
      operationId: get_items
      summary: Gets Items
      description: |
        Gets items and total count of items.
        Page and per-page parameters could be set.
      parameters:
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10,000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
        - name: from
          in: query
          description: |
            The number of users to be skipped from the response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: Get items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_all_items
      summary: Deletes All Items
      description: |
        Warning: Deletes all item metadata from SuggestGrid.
      responses:
        200:
          description: Deleted all item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/users/_bulk:
    post:
      tags:
        - metadata
      operationId: post_bulk_users
      summary: Posts Users
      description: |
        Posts user metadata in bulk.
        Note that this operation completely overrides metadata with the same ids, if they exist.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: users
          in: body
          description:  |
            A number of user metadata objects separated with newlines.
            Each user metadata object must have its id field.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk user metadata request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        413:
          description: Bulk request maximum line count exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items/_bulk:
    post:
      tags:
        - metadata
      operationId: post_bulk_items
      summary: Posts Items
      description: |
        Posts item metadata in bulk.
        Note that this operation completely overrides metadata with the same ids, if they exist.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: items
          in: body
          description:   |
            A number of item metadata objects separated with newlines.
            Each item metadata object must have its id field.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk item metadata request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        413:
          description: Bulk request maximum line count exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Recommendation Paths
  /v1/recommend/users:
    post:
      tags:
        - recommendation
      operationId: get_recommended_users
      summary: Gets Recommended Users
      description: Returns recommended users for the query.
      parameters:
        - name: query
          in: body
          description: Query for recommended users.
          required: true
          schema:
            $ref: '#/definitions/GetRecommendedUsersBody'
      responses:
        200:
          description: Recommended users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: At least one type in the request does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/recommend/items:
    post:
      tags:
        - recommendation
      operationId: get_recommended_items
      summary: Gets Recommended Items
      description: Returns recommended items for the query.
      parameters:
        - name: query
          in: body
          description: Query for recommended items.
          required: true
          schema:
            $ref: '#/definitions/GetRecommendedItemsBody'
      responses:
        200:
          description: Recommended items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: At least one type in the request does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Similarity Paths
  /v1/similar/users:
    post:
      tags:
        - similarity
      operationId: get_similar_users
      summary: Gets Similar Users
      description: Returns similar users for the query.
      parameters:
        - name: query
          in: body
          description: Query for similar users.
          required: true
          schema:
            $ref: '#/definitions/GetSimilarUsersBody'
      responses:
        200:
          description: Similar users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: At least one type in the request does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/similar/items:
    post:
      tags:
        - similarity
      operationId: get_similar_items
      summary: Gets Similar Items
      description: Returns similar items for the query.
      parameters:
        - name: query
          in: body
          description: Query for similar items.
          required: true
          schema:
            $ref: '#/definitions/GetSimilarItemsBody'
      responses:
        200:
          description: Similar items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: At least one type in the request does not exist.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
